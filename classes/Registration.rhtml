<%

# pull in the CGI data
require 'cgi'
require 'digest/sha1'

class Registration

        attr_accessor :errorMsg, :acctGood

       def initialize

         @errorMsg = ' '
         @acctGood = 'false'
         
        
       end

        def createAccount(name, email, pw, plan)

          hashedPW = Digest::SHA1.hexdigest(pw)

          accounthash = File.open("data/user_accounts.txt", "rb") {|f| Marshal.load(f)}
          accounthash.untaint
          accounthash[email] = hashedPW, name, plan, 'f'
          
          File.open("data/user_accounts.txt", "wb") {|f| Marshal.dump(accounthash, f)}

          webcardFilePath = 'data/user_webcards.txt'
          webcardFilePath.untaint
          webcardHash = File.open("#{webcardFilePath}", "rb") {|f| Marshal.load(f)}
          webcardHash[email]= {}
          File.open("#{webcardFilePath}", "wb") {|f| Marshal.dump(webcardHash, f)}
          @acctGood = 'true'
        end

        def checkAccounts(theEmail)
          account_hash = File.open("data/user_accounts.txt", "rb") {|f| Marshal.load(f)}

          if (account_hash.has_key?(theEmail))

            @errorMsg = 'Email already in use'
            return 'true'
          else
            return 'false'
          end
        end

        def redirect
           cgi = CGI::new
           redirect = ''
           if (@acctGood == 'true')
               redirect =   cgi.header('location'=>"index.rhtml?p=success")
           else
            redirect =   cgi.header('location'=>"index.rhtml?p=registration")
           end

          print redirect
        end

        def printError
            return '<p>'+ @errorMsg + '</p>'
        end


  	def cleanData(data)
		return data::gsub(/http:|ftp:|\.|\//i,'')
	end
end

%>