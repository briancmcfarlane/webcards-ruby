<%
require 'digest/sha1'

class GeneratePassword	

	attr_accessor :hash, :dts, :keys, :tbl, :errs

	def createForm(rs, dts)
		if(rs::nil? || rs!='y')
			email = ''
			email_err = ''
		else
			#open file and put contents into hash. You must create a file that has at least one has to start with.
			@hash = File.open("temp_files/temp_email_data.txt", "rb") {|f| Marshal.load(f)}	
			temp = @hash[dts]
			email = temp[0]
			email_err = temp[1]
			
			#delete current temp values
				@hash.delete(dts)
			#write hash back to file
				File.open("temp_files/temp_email_data.txt", "wb") {|f| Marshal.dump(@hash, f)}
		end
		buildForm(email, email_err)
	end
	
	def buildForm(email, email_err)
		@form = '<div><p class="error"><strong>'+ email_err +'</strong></p></div>
		<form method="post" action="passwordrequest.rhtml">
    		<div>
    			<label for="emailadr">Email Address:</label><input type="text" size="20" name="email" id="emailadr" tabindex="100" value="'+ email +'" />
            	<span id="pwd-link"><label>&nbsp;</label><a href="index.rhtml?p=login">Remember your password?</a></span>
       			<label>&nbsp;</label><input type="hidden" name="submitted" value="y" /><input type="submit" value="Send" /><br />
    		</div>
    	</form>'
		return @form
	end


	def pswdReq(email)
		#validating form
			@errs = 'n'
			email_err = validEmail(email)
			
			if(@errs == 'y')
				#open file and put contents into temp hash
					@hash = File.open("temp_files/temp_email_data.txt", "rb") {|f| Marshal.load(f)}
				#time stamp and add new information to hash
					tme = Time.now.strftime("%m%j%Y%H%M%S")
					@dts = tme.to_s()
					@hash[@dts]=[email, email_err]
				#write hash back to file
					File.open("temp_files/temp_email_data.txt", "wb") {|f| Marshal.dump(@hash, f)}
			else
				#form submission completed - generating support message
				name = findName(email)			
				if(name != '')
					temp = createTemp(email)
					subject = 'Reset Password Request'
					message = '<a href="mailto:'+email+'?subject=Message from WebCard Administration&body=Please copy this link into your browser. It will log you into your account.%0A%0ACreate a new password immediately!%0A%0Ahttp://russet.wccnet.edu/~bmcfarlane/webcards-ruby/index.rhtml?p=newpassword&e=email&t=temp">Send the reset link</a>'
					#open file and put contents into support hash
						@hash = File.open("data/contact_list.txt", "rb") {|f| Marshal.load(f)}
					#time stamp and add new information to hash
						tme = Time.now.strftime("%D %r")
						dts = tme.to_s()
						@hash[dts]=[name, email, subject, message]
					#write hash back to file
						File.open("data/contact_list.txt", "wb") {|f| Marshal.dump(@hash, f)}
				end
			end
	end
	
	def validEmail(field)
		msg = ''
		if(field =="")
			msg = 'Please enter your email address.'
			@errs = 'y'
		else
			regex = /^[^@\s]+@([-a-z0-9]+\.)+[a-z]{2,}$/i
			if(field !~ regex)
				msg = 'Please enter a valid email address.'
				@errs = 'y'
			end
		end
		return msg
	end
	
	def findName(email)
		name = ''
		hash = File.open("data/user_accounts.txt", "rb") {|f| Marshal.load(f)}
		if (hash.has_key?(email))
			temp = hash[email]
			name = temp[1]
		end
        return name
    end

	def createTemp(email)
		#open file and put contents into support hash
			@hash = File.open("temp_files/temp_req_data.txt", "rb") {|f| Marshal.load(f)}
		#create temp key
			tme = Time.now.strftime("%m%j%Y%H%M%S")
			dts = tme.to_s()
#			dts = tme.to_s() + email
#			dts = Digest::SHA1.hexdigest(dts)
			@hash[dts]=[email]
		#write hash back to file
			File.open("temp_files/temp_req_data.txt", "wb") {|f| Marshal.dump(@hash, f)}
		return dts
	end
		
	def redirect
		redirect = ''
		if (@errs == 'n')
			redirect = "<script type='text/javascript'>window.location = 'index.rhtml?p=resetpassword'</script>"
		else
			redirect = "<script type='text/javascript'>window.location = 'index.rhtml?p=forgotpassword&rs="+ @errs +"&dts="+ @dts +"'</script>"
		end
		print redirect
	end
	
end

%>